{"version":3,"file":"product-management.js","sources":["~/@wonderful/product-management/product-management.ts","~/@wonderful/product-management/src/product-management.module.ts","~/@wonderful/product-management/src/config.ts","~/@wonderful/product-management/src/products/products.module.ts","~/@wonderful/product-management/src/products/components/add-product.ts","~/@wonderful/product-management/src/products/containers/add-product-container.ts","~/@wonderful/product-management/src/products/actions/Product.ts","~/@wonderful/product-management/src/products/reducers/index.ts","~/@wonderful/product-management/src/products/reducers/products.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ProductsModule,ProductManagementModule,ProductManagementConfig,ProductManagementSettings} from './public_api';\n\nexport {INITIAL_OPTIONS as ɵc,PRODUCT_MANAGEMENT_CONFIG as ɵb,createConfig as ɵd} from './src/config';\nexport {COMPONENTS as ɵa} from './src/product-management.module';\nexport {AddProductComponent as ɵf} from './src/products/components/add-product';\nexport {AddProductContainerComponent as ɵg} from './src/products/containers/add-product-container';\nexport {State as ɵh,reducers as ɵe} from './src/products/reducers';","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ProductsModule } from '../src/products/products.module';\nimport { createConfig, INITIAL_OPTIONS, PRODUCT_MANAGEMENT_CONFIG, ProductManagementSettings } from './config';\nimport { AddProductContainerComponent } from './products/containers/add-product-container';\n\nexport const /** @type {?} */ COMPONENTS = [\n];\nexport class ProductManagementModule {\n/**\n * @param {?=} settings\n * @return {?}\n */\nstatic forRoot(settings: ProductManagementSettings = {}): ModuleWithProviders {\n    return {\n      ngModule: ProductManagementModule,\n      providers: [\n        {\n          provide: INITIAL_OPTIONS,\n          useValue: settings\n        },\n        {\n          provide: PRODUCT_MANAGEMENT_CONFIG,\n          deps: [INITIAL_OPTIONS],\n          useFactory: createConfig,\n        },\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    RouterModule,\n    ProductsModule,\n    RouterModule.forChild([\n      { path: '', component: AddProductContainerComponent },\n    ])],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProductManagementModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProductManagementModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProductManagementModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InjectionToken } from '@angular/core';\nexport class ProductManagementConfig {\n    baseUrl: string;\n}\n\nfunction ProductManagementConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nProductManagementConfig.prototype.baseUrl;\n}\n\n\nexport const /** @type {?} */ PRODUCT_MANAGEMENT_CONFIG = new InjectionToken<ProductManagementConfig>(\n    '@aicpa-projectmanagement/releasemanagement Config'\n);\n\nexport const /** @type {?} */ INITIAL_OPTIONS = new InjectionToken<ProductManagementConfig>(\n    '@aicpa-projectmanagement/releasemanagement Initial Options'\n);\n/**\n * @param {?} _config\n * @return {?}\n */\nexport function createConfig(_config: ProductManagementConfig): ProductManagementConfig {\n    const /** @type {?} */ DEFAULT_SETTINGS: ProductManagementConfig = {\n        baseUrl: ''\n    };\n    const /** @type {?} */ initialSettings = _config;\n    const /** @type {?} */ config = Object.assign({}, DEFAULT_SETTINGS, initialSettings);\n    if (config.baseUrl == null) {\n        throw new Error(`Product Management base url is required, got ${config.baseUrl}`);\n    }\n    return config;\n}\n\nexport type ProductManagementSettings =\n    | Partial<ProductManagementConfig>\n    | (() => Partial<ProductManagementConfig>);\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducers } from './reducers';\nimport { AddProductContainerComponent } from './containers/add-product-container';\nimport { AddProductComponent } from './components/add-product';\n\nconst /** @type {?} */ COMPONENTS = [\n    AddProductComponent,\n    AddProductContainerComponent\n];\nexport class ProductsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        /**\n         * StoreModule.forFeature is used for composing state\n         * from feature modules. These modules can be loaded\n         * eagerly or lazily and will be dynamically added to\n         * the existing state.\n         */\n        StoreModule.forFeature('products', reducers),\n\n        /**\n         * Effects.forFeature is used to register effects\n         * from feature modules. Effects can be loaded\n         * eagerly or lazily and will be started immediately.\n         *\n         * All Effects will only be instantiated once regardless of\n         * whether they are registered once or multiple times.\n         */\n        EffectsModule.forFeature([]),\n    ],\n    declarations: COMPONENTS,\n    providers: [],\n    exports: COMPONENTS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProductsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProductsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProductsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Output } from '@angular/core';\nexport class AddProductComponent {\n     addProduct = new EventEmitter();\n/**\n * @param {?} el\n */\nconstructor(public el: ElementRef) {\n\n    }\n/**\n * @param {?} event\n * @return {?}\n */\naddProductClick(event) {\n        const /** @type {?} */ name = this.el.nativeElement.value;\n        this.addProduct.emit(name);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'pm-add-product',\n    template: `\n        <div>\n        <form (ngSubmit)=\"addProductClick($event)\">\n            <p>Product Name:<input type=\"text\" name=\"prodName\" id=\"prodName\"></p>\n        </form>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'addProduct': [{ type: Output },],\n};\n}\n\nfunction AddProductComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAddProductComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAddProductComponent.ctorParameters;\n/** @type {?} */\nAddProductComponent.propDecorators;\n/** @type {?} */\nAddProductComponent.prototype.addProduct;\n/** @type {?} */\nAddProductComponent.prototype.el;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Store } from '@ngrx/store';\nimport {State} from '../reducers';\nimport {Add} from '../actions/product';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nexport class AddProductContainerComponent {\n/**\n * @param {?} store\n */\nconstructor(private store: Store<State>) {\n    }\n/**\n * @param {?} name\n * @return {?}\n */\naddProduct(name: string) {\n        this.store.dispatch(new Add({\n            id: Math.random().toString(),\n            name: name\n        }));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'pm-add-product-container',\n    template: `\n        <div>\n        <pm-add-product (addProduct)=\"addProduct($event)\"></pm-add-product>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Store, },\n];\n}\n\nfunction AddProductContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAddProductContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAddProductContainerComponent.ctorParameters;\n/** @type {?} */\nAddProductContainerComponent.prototype.store;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Action } from '@ngrx/store';\nimport { Product } from '../models/product';\n\n\nexport const /** @type {?} */ ADD = '[Releases] Add';\nexport class Add implements Action {\n    readonly type = ADD;\n/**\n * @param {?} payload\n */\nconstructor(public payload: Product) { }\n}\n\nfunction Add_tsickle_Closure_declarations() {\n/** @type {?} */\nAdd.prototype.type;\n/** @type {?} */\nAdd.prototype.payload;\n}\n\n\nexport type Actions = Add;\n\n\n","import { State as RootState } from '@branding/rootstate';\nimport { createFeatureSelector, createSelector, ActionReducerMap } from '@ngrx/store';\n\nimport { reducer as productReducer, State as fromProductState, adapter as fromProductsAdapter } from './products';\nimport {Product} from '../models/product';\nimport { MemoizedSelector } from '@ngrx/store/src/selector';\n\nimport { Dictionary, EntitySelectors } from '@ngrx/entity/src/models';\n\nexport interface ProductsState {\n    products: fromProductState;\n}\n\nexport interface State extends RootState {\n    products: ProductsState;\n}\n\nexport const /** @type {?} */ reducers: any = {\n    products: productReducer\n};\n/**\n * The createFeatureSelector function selects a piece of state from the root of the state object.\n * This is used for selecting feature states that are loaded eagerly or lazily.\n */\nexport const getProductState: MemoizedSelector<any, ProductsState> = createFeatureSelector<ProductsState>('products');\n/**\n * Every reducer module exports selector functions, however child reducers\n * have no knowledge of the overall state tree. To make them usable, we\n * need to make new selectors that wrap them.\n * \n * The createSelector function creates very efficient selectors that are memoized and\n * only recompute when arguments change. The created selectors can also be composed\n * together to select different pieces of state.\n */\nexport const getProductEntitiesState: MemoizedSelector<any, fromProductState> = createSelector(\n    getProductState,\n    state => state.products\n);\n/**\n * Adapters created with \\@ngrx/entity generate\n * commonly used selector functions including\n * getting all ids in the record set, a dictionary\n * of the records by id, an array of records and\n * the total number of records. This reducers boilerplate\n * in selecting records from the entity state.\n */\nconst entityFns = fromProductsAdapter.getSelectors(getProductEntitiesState);\nexport const {\n    selectIds: getProductIds,\n    selectAll: getAllProducts,\n    selectTotal: getTotalProducts,\n  } = entityFns;\nexport const {selectEntities: getProductEntities}: EntitySelectors<Product, any> = entityFns;\n\n\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport * as productActions from '../actions/Product';\nimport { Product } from '../models/product';\n\nexport interface State extends EntityState<Product> {\n    selectedProductId: string | null;\n}\n/**\n * createEntityAdapter creates many an object of helper\n * functions for single or multiple operations\n * against the dictionary of records. The configuration\n * object takes a record id selector function and\n * a sortComparer option which is set to a compare\n * function if the records are to be sorted.\n */\nexport const adapter: EntityAdapter<Product> = createEntityAdapter<Product>({\n    selectId: (product: Product) => product.id,\n    sortComparer: false,\n});\n/**\n * getInitialState returns the default initial state\n * for the generated entity state. Initial state\n * additional properties can also be defined.\n */\nexport const initialState: State = adapter.getInitialState({\n    selectedProductId: null,\n});\n/**\n * @param {?=} state\n * @param {?=} action\n * @return {?}\n */\nexport function reducer(state = initialState,\n    action: productActions.Actions): State {\n    switch (action.type) {\n        case productActions.ADD: {\n            return {\n                ...adapter.addOne(action.payload, state),\n                selectedProductId: state.selectedProductId\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const /** @type {?} */ getSelectedId = (state: State) => state.selectedProductId;\n"],"names":["COMPONENTS","Add","store","ADD","fromProductsAdapter","productReducer","productActions.ADD"],"mappings":"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"}
